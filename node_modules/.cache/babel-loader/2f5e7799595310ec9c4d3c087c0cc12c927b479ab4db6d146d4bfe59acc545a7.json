{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL } from '../constants/userConstants';\nexport const login = (email, password) => async dispatch => {\n  //prende gli argomenti e li passa al backend \n\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      //variabile di configurazione della richiesta POST\n      headers: {\n        'ContentType': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login/',\n    //li manda all'url del login-in come oggetto \n    {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  //prende gli argomenti e li passa al backend \n\n  try {\n    //leggo dall'alto verso il basso\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      //variabile di configurazione della richiesta POST\n      headers: {\n        'ContentType': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register/',\n    //li manda all'url del login-in come oggetto \n    {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async dispatch => {\n  //prendo l'id per ottenere un utente specifico\n\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const config = {\n      headers: {\n        'ContentType': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/users/${id}/`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","register","name","getUserDetails","id"],"sources":["/Users/francesco/Desktop/ecommerce/frontend/src/actions/userActions.js"],"sourcesContent":["import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n} from '../constants/userConstants'\n\nexport const login = (email, password) => async (dispatch) => {//prende gli argomenti e li passa al backend \n\n    try{\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = { //variabile di configurazione della richiesta POST\n            headers: {\n                'ContentType' : 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users/login/',                //li manda all'url del login-in come oggetto \n            {'username': email, 'password': password} ,config )\n        \n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error){\n        \n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message\n        })\n\n    }\n}\n\n  \nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({type: USER_LOGOUT})\n}\n\n\n\nexport const register = (name, email, password) => async (dispatch) => {//prende gli argomenti e li passa al backend \n\n    try{//leggo dall'alto verso il basso\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = { //variabile di configurazione della richiesta POST\n            headers: {\n                'ContentType' : 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users/register/',                //li manda all'url del login-in come oggetto \n            {'name':name, 'email': email, 'password': password} ,config )\n        \n        dispatch({\n            type:USER_REGISTER_SUCCESS,\n            payload:data\n        })\n\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    }catch(error){\n        \n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message\n        })\n\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch) => {//prendo l'id per ottenere un utente specifico\n\n    try{\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const config = { \n            headers: {\n                'ContentType' : 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            `/api/users/${id}/`,                \n             config )\n        \n        dispatch({\n            type:USER_DETAILS_SUCCESS,\n            payload:data\n        })\n\n    \n    }catch(error){\n        \n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message\n        })\n\n    }\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}