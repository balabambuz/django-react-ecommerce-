{"ast":null,"code":"var _jsxFileName = \"/Users/francesco/Downloads/ecommerce/frontend/src/screens/WorkScreen.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from 'react';\nimport Display from '../components/Display';\nimport { useParams } from 'react-router-dom';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Masonry from 'react-masonry-css';\nimport AnimatedPage from '../components/AnimatedPage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WorkScreen() {\n  _s();\n  const [lastPartOfUrl, setLastPartOfUrl] = useState('');\n  const dispatch = useDispatch();\n  const postList = useSelector(state => state.postList);\n  const {\n    error,\n    loading,\n    posts\n  } = postList;\n  useEffect(() => {\n    // Ottieni l'ultima parte dell'URL (dopo l'ultimo /)\n    const urlParts = window.location.pathname.split('/');\n    const lastPart = urlParts[urlParts.length - 1];\n\n    // Aggiorna lo state con l'ultima parte dell'URL\n    setLastPartOfUrl(lastPart);\n    dispatch(listPosts);\n    AOS.init();\n    AOS.refresh();\n  }, [dispatch]);\n  const {\n    name\n  } = useParams();\n  const filteredPosts = posts.filter(post => post.category === name);\n  return /*#__PURE__*/_jsxDEV(AnimatedPage, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Masonry, {\n        breakpointCols: breakpointColumnsObj,\n        className: \"my-masonry-grid\",\n        columnClassName: \"my-masonry-grid_column\",\n        children: filteredPosts.reverse().map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-aos\": \"fade-up\",\n          children: /*#__PURE__*/_jsxDEV(Post, {\n            post: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this)\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(WorkScreen, \"Fa1PkBNKAwEmC35eTYAkIjJ72oo=\", false, function () {\n  return [useDispatch, useSelector, useParams];\n});\n_c = WorkScreen;\nexport default WorkScreen;\nvar _c;\n$RefreshReg$(_c, \"WorkScreen\");","map":{"version":3,"names":["React","useState","useEffect","Display","useParams","Loader","Message","Masonry","AnimatedPage","useDispatch","useSelector","jsxDEV","_jsxDEV","WorkScreen","_s","lastPartOfUrl","setLastPartOfUrl","dispatch","postList","state","error","loading","posts","urlParts","window","location","pathname","split","lastPart","length","listPosts","AOS","init","refresh","name","filteredPosts","filter","post","category","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","breakpointCols","breakpointColumnsObj","className","columnClassName","reverse","map","Post","_id","_c","$RefreshReg$"],"sources":["/Users/francesco/Downloads/ecommerce/frontend/src/screens/WorkScreen.js"],"sourcesContent":["import {React, useState, useEffect} from 'react'\nimport Display from '../components/Display'\nimport { useParams } from 'react-router-dom';\nimport Loader from '../components/Loader'\nimport Message from '../components/Message';\nimport Masonry from 'react-masonry-css';\nimport AnimatedPage from '../components/AnimatedPage';\nimport { useDispatch, useSelector } from 'react-redux'\n\nfunction WorkScreen() {\n    const [lastPartOfUrl, setLastPartOfUrl] = useState('');\n\n    const dispatch = useDispatch();\n    const postList = useSelector(state => state.postList)\n    const {error, loading, posts} = postList \n\n    useEffect(() => {\n        // Ottieni l'ultima parte dell'URL (dopo l'ultimo /)\n        const urlParts = window.location.pathname.split('/');\n        const lastPart = urlParts[urlParts.length - 1];\n\n        // Aggiorna lo state con l'ultima parte dell'URL\n        setLastPartOfUrl(lastPart);\n\n        dispatch(listPosts);\n        AOS.init();\n        AOS.refresh();\n\n        \n    }, [dispatch]);\n\n    const { name } = useParams();\n\n    const filteredPosts = posts.filter((post) => post.category === name);\n\n  return (\n    <AnimatedPage>\n\n     <div>\n    {loading ? <Loader/>\n          : error ? <Message variant='danger' >{error}</Message>\n                    \n            :\n          <Masonry\n            breakpointCols={breakpointColumnsObj}\n            className=\"my-masonry-grid\"\n            columnClassName=\"my-masonry-grid_column\"\n          >\n            {filteredPosts.reverse().map(post => (\n                <div data-aos=\"fade-up\" key={post._id}>\n                  <Post post={post}/>\n                </div>\n                ))}\n          </Masonry>\n          }\n    </div> \n  </AnimatedPage>\n  )\n}\nexport default WorkScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}