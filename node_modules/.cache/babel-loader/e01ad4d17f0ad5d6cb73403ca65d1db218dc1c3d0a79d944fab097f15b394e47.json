{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL } from \"../constants/orderConstants\";\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        //mando anche le informazioni dell'utenza per l'Auth\n        'ContentType': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders/add/`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        //mando anche le informazioni dell'utenza per l'Auth\n        'ContentType': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}/`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'ContentType': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${id}/pay/`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const deliverOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'ContentType': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${order._id}/deliver/`, {}, config);\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listMyOrders = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'ContentType': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders/`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'ContentType': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","CART_CLEAR_ITEMS","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","localStorage","removeItem","error","response","detail","message","getOrderDetails","id","get","payOrder","paymentResult","put","deliverOrder","_id","listMyOrders","listOrders"],"sources":["/Users/francesco/VSC projects/ecommerce/frontend/src/actions/orderActions.js"],"sourcesContent":["import axios from 'axios'\nimport { \n    ORDER_CREATE_REQUEST, \n    ORDER_CREATE_SUCCESS, \n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    \n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    \n} from \"../constants/orderConstants\"\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n\n    try{\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = { \n            headers: {      //mando anche le informazioni dell'utenza per l'Auth\n                'ContentType' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`   \n            }                                            \n        }                                                \n\n        const {data} = await axios.post(\n            `/api/orders/add/`, \n             order,               \n             config \n        )\n        \n        dispatch({\n            type:ORDER_CREATE_SUCCESS,\n            payload:data\n        })\n\n        dispatch({\n            type:CART_CLEAR_ITEMS,\n            payload:data\n        })\n\n        localStorage.removeItem('cartItems') \n\n    \n    }catch(error){\n        \n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message\n        })\n\n    }\n}\n\n\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n\n    try{\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = { \n            headers: {      //mando anche le informazioni dell'utenza per l'Auth\n                'ContentType' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`   \n            }                                            \n        }                                                \n\n        const {data} = await axios.get(\n            `/api/orders/${id}/`,                \n             config \n        )\n        \n        dispatch({\n            type:ORDER_DETAILS_SUCCESS,\n            payload:data\n        })\n\n\n    \n    }catch(error){\n        \n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message\n        })\n\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n\n    try{\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = { \n            headers: {      \n                'ContentType' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`   \n            }                                            \n        }                                                \n\n        const {data} = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,             \n            config \n        )\n        \n        dispatch({\n            type:ORDER_PAY_SUCCESS,\n            payload:data\n        })\n\n\n    \n    }catch(error){\n        \n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message\n        })\n\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n\n    try{\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = { \n            headers: {      \n                'ContentType' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`   \n            }                                            \n        }                                                \n\n        const {data} = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},             \n            config \n        )\n        \n        dispatch({\n            type:ORDER_DELIVER_SUCCESS,\n            payload:data\n        })\n\n\n    \n    }catch(error){\n        \n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message\n        })\n\n    }\n}\n\n\nexport const listMyOrders = (id) => async (dispatch, getState) => {\n\n    try{\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = { \n            headers: {      \n                'ContentType' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`   \n            }                                            \n        }                                                \n\n        const {data} = await axios.get(\n            `/api/orders/myorders/`,                \n             config \n        )\n        \n        dispatch({\n            type:ORDER_LIST_MY_SUCCESS,\n            payload:data\n        })\n\n    }catch(error){\n        \n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message\n        })\n\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n\n    try{\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n        const {\n            userLogin: { userInfo }, \n        } = getState()\n\n        const config = { \n            headers: {      \n                'ContentType' : 'application/json',\n                Authorization: `Bearer ${userInfo.token}`   \n            }                                            \n        }                                                \n\n        const {data} = await axios.get(\n            `/api/orders/`,                \n             config \n        )\n        \n        dispatch({\n            type:ORDER_LIST_SUCCESS,\n            payload:data\n        })\n\n    }catch(error){\n        \n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail \n            ? error.response.data.detail\n            : error.message\n        })\n\n    }\n}\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}