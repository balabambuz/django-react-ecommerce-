{"ast":null,"code":"var _jsxFileName = \"/Users/francesco/Downloads/ecommerce/frontend/src/screens/WorkScreen.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from 'react';\nimport Display from '../components/Display';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport Masonry from 'react-masonry-css';\nimport AnimatedPage from '../components/AnimatedPage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listWorks } from '../actions/mediaActions';\nimport Post from '../components/Post';\nimport AOS from \"aos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WorkScreen(_ref) {\n  _s();\n  let {\n    history\n  } = _ref;\n  const [lastPartOfUrl, setLastPartOfUrl] = useState('');\n  let keyword = history.location.search;\n  const dispatch = useDispatch();\n  const workList = useSelector(state => state.workList);\n  const {\n    error,\n    loading,\n    posts\n  } = workList;\n  const filteredPosts = posts.filter(post => post.category === keyword);\n  const breakpointColumnsObj = {\n    default: 3,\n    600: 2\n  };\n  useEffect(() => {\n    // Ottieni l'ultima parte dell'URL (dopo l'ultimo /)\n    const urlParts = window.location.pathname.split('/');\n    const lastPart = urlParts[urlParts.length - 1];\n\n    // Aggiorna lo state con l'ultima parte dell'URL\n    setLastPartOfUrl(lastPart);\n    dispatch(listWorks);\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"lol\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(WorkScreen, \"9wWaNXJrNR15PjwPxY54qM/T+EA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = WorkScreen;\nexport default WorkScreen;\nvar _c;\n$RefreshReg$(_c, \"WorkScreen\");","map":{"version":3,"names":["React","useState","useEffect","Display","Loader","Message","Masonry","AnimatedPage","useDispatch","useSelector","listWorks","Post","AOS","jsxDEV","_jsxDEV","WorkScreen","_ref","_s","history","lastPartOfUrl","setLastPartOfUrl","keyword","location","search","dispatch","workList","state","error","loading","posts","filteredPosts","filter","post","category","breakpointColumnsObj","default","urlParts","window","pathname","split","lastPart","length","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/francesco/Downloads/ecommerce/frontend/src/screens/WorkScreen.js"],"sourcesContent":["import {React, useState, useEffect} from 'react'\nimport Display from '../components/Display'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message';\nimport Masonry from 'react-masonry-css';\nimport AnimatedPage from '../components/AnimatedPage';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listWorks } from '../actions/mediaActions'\nimport Post from '../components/Post';\nimport AOS from \"aos\";\n\nfunction WorkScreen({history}) {\n    const [lastPartOfUrl, setLastPartOfUrl] = useState('');\n    let keyword = history.location.search\n\n    const dispatch = useDispatch();\n    const workList = useSelector(state => state.workList)\n    const {error, loading, posts} = workList \n\n    \n    const filteredPosts = posts.filter((post) => post.category === keyword);\n    const breakpointColumnsObj = {\n        default: 3,\n        600: 2,\n      \n      };\n\n\n\n    useEffect(() => {\n        // Ottieni l'ultima parte dell'URL (dopo l'ultimo /)\n        const urlParts = window.location.pathname.split('/');\n        const lastPart = urlParts[urlParts.length - 1];\n\n        // Aggiorna lo state con l'ultima parte dell'URL\n        setLastPartOfUrl(lastPart);\n        dispatch(listWorks);\n\n        \n    }, [dispatch]);\n\n  \n\n    \n\n  return (\n    <h1>lol</h1>\n  )\n}\nexport default WorkScreen"],"mappings":";;AAAA,SAAQA,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,yBAAyB;AACnD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,GAAG,MAAM,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,UAAUA,CAAAC,IAAA,EAAY;EAAAC,EAAA;EAAA,IAAX;IAACC;EAAO,CAAC,GAAAF,IAAA;EACzB,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtD,IAAIoB,OAAO,GAAGH,OAAO,CAACI,QAAQ,CAACC,MAAM;EAErC,MAAMC,QAAQ,GAAGhB,WAAW,EAAE;EAC9B,MAAMiB,QAAQ,GAAGhB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACD,QAAQ,CAAC;EACrD,MAAM;IAACE,KAAK;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGJ,QAAQ;EAGxC,MAAMK,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,KAAKZ,OAAO,CAAC;EACvE,MAAMa,oBAAoB,GAAG;IACzBC,OAAO,EAAE,CAAC;IACV,GAAG,EAAE;EAEP,CAAC;EAIHjC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMkC,QAAQ,GAAGC,MAAM,CAACf,QAAQ,CAACgB,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC;IACpD,MAAMC,QAAQ,GAAGJ,QAAQ,CAACA,QAAQ,CAACK,MAAM,GAAG,CAAC,CAAC;;IAE9C;IACArB,gBAAgB,CAACoB,QAAQ,CAAC;IAC1BhB,QAAQ,CAACd,SAAS,CAAC;EAGvB,CAAC,EAAE,CAACc,QAAQ,CAAC,CAAC;EAMhB,oBACEV,OAAA;IAAA4B,QAAA,EAAI;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAK;AAEhB;AAAC7B,EAAA,CArCQF,UAAU;EAAA,QAIEP,WAAW,EACXC,WAAW;AAAA;AAAAsC,EAAA,GALvBhC,UAAU;AAsCnB,eAAeA,UAAU;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}