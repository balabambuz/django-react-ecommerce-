{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux'; //prende tutti i reducers e li combina in un unico reducer\nimport thunk from 'redux-thunk'; // thunk chiama action creators che ritornano una funzione invece di un action object  \nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducers, productDetailsReducers } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n  productList: productListReducers,\n  productDetails: productDetailsReducers,\n  cart: cartReducer,\n  userLogin: userLoginReducer\n}); //reducer uguale alla combinazione di reducers\n//all'avvio dell'app vengono creati in redux contenitori vuoti dei reducers\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []; //se esiste lo prendiamo e lo trasformiamo in JSON altrimenti passiamo un array vuoto\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  //se era stata già aperta una sessione allora lo state verrà caricato con gli oggetti salvati nel carrello \n  userLogin: {\n    userInfo: userInfoFromStorage\n  } // della sessione precedente\n};\n\nconst middleware = [thunk]; //passo come array di middleware per aggiungerne di più in una volta\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware))); // ... spread operator\n\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducers","productDetailsReducers","cartReducer","userLoginReducer","userRegisterReducer","reducer","productList","productDetails","cart","userLogin","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","cartItems","userInfo","middleware","store"],"sources":["/Users/francesco/Desktop/ecommerce/frontend/src/store.js"],"sourcesContent":["import {createStore, combineReducers, applyMiddleware } from 'redux' //prende tutti i reducers e li combina in un unico reducer\nimport thunk from 'redux-thunk'                                      // thunk chiama action creators che ritornano una funzione invece di un action object  \nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducers, productDetailsReducers } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers'\n\nconst reducer = combineReducers({\n     productList: productListReducers,\n     productDetails: productDetailsReducers,\n     cart: cartReducer,\n     userLogin: userLoginReducer, \n}) //reducer uguale alla combinazione di reducers\n//all'avvio dell'app vengono creati in redux contenitori vuoti dei reducers\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : [] //se esiste lo prendiamo e lo trasformiamo in JSON altrimenti passiamo un array vuoto\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null \n\nconst initialState = {\n    cart: { cartItems: cartItemsFromStorage}, //se era stata già aperta una sessione allora lo state verrà caricato con gli oggetti salvati nel carrello \n    userLogin: { userInfo: userInfoFromStorage} // della sessione precedente\n}\n\nconst middleware = [thunk] //passo come array di middleware per aggiungerne di più in una volta\n\nconst store = createStore(reducer, initialState,\n    composeWithDevTools(applyMiddleware(...middleware))) // ... spread operator\n\n\n\nexport default store"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO,EAAC;AACrE,OAAOC,KAAK,MAAM,aAAa,EAAsC;AACrE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,mBAAmB,EAAEC,sBAAsB,QAAQ,4BAA4B;AACxF,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,gBAAgB,EAAEC,mBAAmB,QAAQ,yBAAyB;AAE/E,MAAMC,OAAO,GAAGT,eAAe,CAAC;EAC3BU,WAAW,EAAEN,mBAAmB;EAChCO,cAAc,EAAEN,sBAAsB;EACtCO,IAAI,EAAEN,WAAW;EACjBO,SAAS,EAAEN;AAChB,CAAC,CAAC,EAAC;AACH;;AAEA,MAAMO,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAG,EAAE,EAAC;;AAEvD,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,IAAI;AAEvD,MAAMI,YAAY,GAAG;EACjBR,IAAI,EAAE;IAAES,SAAS,EAAEP;EAAoB,CAAC;EAAE;EAC1CD,SAAS,EAAE;IAAES,QAAQ,EAAEH;EAAmB,CAAC,CAAC;AAChD,CAAC;;AAED,MAAMI,UAAU,GAAG,CAACrB,KAAK,CAAC,EAAC;;AAE3B,MAAMsB,KAAK,GAAGzB,WAAW,CAACU,OAAO,EAAEW,YAAY,EAC3CjB,mBAAmB,CAACF,eAAe,CAAC,GAAGsB,UAAU,CAAC,CAAC,CAAC,EAAC;;AAIzD,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}