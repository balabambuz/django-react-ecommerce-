{"ast":null,"code":"import { CART_ADD_ITEM } from '../constants/cartConstants';\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartItems: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product); //oggetto uguale a oggetto payload\n      if (existItem) {\n        //se l'oggetto esiste gia\n        return {\n          ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x) //ritorna il prodotto aggiornato del payload altrimenti ritorna l'oggetto \n        }; //originale invariato\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item] //ritorna l'elenco originale di  prodotti piu il nuovo prodotto aggiunto\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["CART_ADD_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map"],"sources":["/Users/francesco/Desktop/ecommerce/frontend/src/reducers/cartReducers.js"],"sourcesContent":["import {CART_ADD_ITEM} from '../constants/cartConstants'\n\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n   switch(action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.product === item.product)//oggetto uguale a oggetto payload\n            if(existItem){ //se l'oggetto esiste gia\n                return{\n                    ...state, \n                    cartItems: state.cartItems.map(x =>\n                        x.product === existItem.product ? item : x)//ritorna il prodotto aggiornato del payload altrimenti ritorna l'oggetto \n                }                                                   //originale invariato\n            }else{\n                return{\n                    ...state,\n                    cartItems:[...state.cartItems, item] //ritorna l'elenco originale di  prodotti piu il nuovo prodotto aggiunto\n                }      \n            }\n\n        default:\n            return state\n   } \n}"],"mappings":"AAAA,SAAQA,aAAa,QAAO,4BAA4B;AAGxD,OAAO,MAAMC,WAAW,GAAG,YAAuC;EAAA,IAAtCC,KAAK,uEAAG;IAAEC,SAAS,EAAE;EAAG,CAAC;EAAA,IAAEC,MAAM;EAC1D,QAAOA,MAAM,CAACC,IAAI;IACb,KAAKL,aAAa;MACd,MAAMM,IAAI,GAAGF,MAAM,CAACG,OAAO;MAC3B,MAAMC,SAAS,GAAGN,KAAK,CAACC,SAAS,CAACM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,KAAKL,IAAI,CAACK,OAAO,CAAC;MACvE,IAAGH,SAAS,EAAC;QAAE;QACX,OAAM;UACF,GAAGN,KAAK;UACRC,SAAS,EAAED,KAAK,CAACC,SAAS,CAACS,GAAG,CAACF,CAAC,IAC5BA,CAAC,CAACC,OAAO,KAAKH,SAAS,CAACG,OAAO,GAAGL,IAAI,GAAGI,CAAC,CAAC;QACnD,CAAC,EAAmD;MACxD,CAAC,MAAI;QACD,OAAM;UACF,GAAGR,KAAK;UACRC,SAAS,EAAC,CAAC,GAAGD,KAAK,CAACC,SAAS,EAAEG,IAAI,CAAC,CAAC;QACzC,CAAC;MACL;;IAEJ;MACI,OAAOJ,KAAK;EAAA;AAExB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}